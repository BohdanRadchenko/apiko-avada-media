{"version":3,"sources":["context/AuthContext.js","components/App.module.css","redux/actionType.js","redux/users/usersReducer.js","redux/controller/controllerReducers.js","redux/store.js","async.routes.js","components/Loaders.js","components/App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["noop","AuthContext","createContext","token","id","login","logout","isAuthenticated","module","exports","ActionType","combineReducers","items","state","type","payload","users","user","loading","error","authentication","message","rootReducer","userReducer","controller","controllerReducers","middleware","ReduxThunk","enhancer","applyMiddleware","store","createStore","composeWithDevTools","AsyncLogin","lazy","AsyncRegister","AsyncReset","AsyncHome","AsyncFavorite","AsyncCreate","AsyncEdit","AsyncProduct","AsyncProfile","AsyncInbox","baseStyle","display","position","top","left","transform","Loaders","style","color","height","width","App","useState","setToken","setId","useCallback","jwtToken","userId","localStorage","setItem","JSON","stringify","removeItem","useEffect","data","parse","getItem","useAuth","routes","path","exact","to","className","css","container","Provider","value","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.35a6090d.chunk.js","sourcesContent":["import {createContext} from 'react'\r\nconst noop = () => {}\r\n\r\nexport const AuthContext  = createContext({\r\n    token : null,\r\n    id: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3jo9B\"};","export const ActionType = {\r\n  //CONTROLLER\r\n  AUTHENTICATION_HANDLER : 'AUTHENTICATION_HANDLER',\r\n  MESSAGE_HANDLER : 'MESSAGE_HANDLER',\r\n\r\n  //USERS\r\n  FETCH_USERS_REQUEST : 'FETCH_USERS_REQUEST',\r\n  FETCH_USERS_SUCCESS : 'FETCH_USERS_SUCCESS',\r\n  FETCH_USERS_ERROR : 'FETCH_USERS_ERROR',\r\n\r\n  FETCH_USERS_BY_ID_REQUEST: 'FETCH_USERS_BY_ID_REQUEST',\r\n  FETCH_USERS_BY_ID_SUCCESS: 'FETCH_USERS_BY_ID_SUCCESS',\r\n  FETCH_USERS_BY_ID_ERROR: 'FETCH_USERS_BY_ID_ERROR',\r\n};","import { combineReducers } from 'redux';\r\nimport { ActionType } from '../actionType';\r\n\r\nconst itemsReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case ActionType.FETCH_USERS_SUCCESS:\r\n      return payload.users;\r\n\r\n    case ActionType.FETCH_USERS_BY_ID_SUCCESS:\r\n      return payload.user;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loadingReducer = (state = false, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionType.FETCH_USERS_REQUEST:\r\n    case ActionType.FETCH_USERS_BY_ID_REQUEST:\r\n      return true;\r\n\r\n    case ActionType.FETCH_USERS_SUCCESS:\r\n    case ActionType.FETCH_USERS_BY_ID_SUCCESS:\r\n    case ActionType.FETCH_USERS_ERROR:\r\n    case ActionType.FETCH_USERS_BY_ID_ERROR:\r\n\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst errorReducer = (state = null, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionType.FETCH_USERS_REQUEST:\r\n    case ActionType.FETCH_USERS_SUCCESS:\r\n    case ActionType.FETCH_USERS_BY_ID_REQUEST:\r\n    case ActionType.FETCH_USERS_BY_ID_SUCCESS:\r\n      return null;\r\n\r\n    case ActionType.FETCH_USERS_ERROR:\r\n    case ActionType.FETCH_USERS_BY_ID_ERROR:\r\n      return payload.error;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n});","import { combineReducers } from 'redux';\r\nimport { ActionType } from '../actionType';\r\n\r\nconst authenticationReducer = (state = false, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionType.AUTHENTICATION_HANDLER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst messageReducer = (state = true, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionType.MESSAGE_HANDLER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default combineReducers({\r\n  authentication : authenticationReducer,\r\n  message : messageReducer,\r\n});","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport userReducer from \"./users/usersReducer\";\r\nimport controllerReducers from \"./controller/controllerReducers\";\r\n\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  controller : controllerReducers\r\n});\r\n\r\nconst middleware = [ReduxThunk];\r\nconst enhancer = applyMiddleware(...middleware);\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\r\n\r\nexport default store;","import {lazy} from 'react';\r\n\r\nexport const AsyncLogin = lazy(() =>\r\n  import('./pages/LogInPage'),\r\n);\r\n\r\nexport const AsyncRegister = lazy(() =>\r\n  import('./pages/RegisterPage'),\r\n);\r\n\r\nexport const AsyncReset = lazy(() =>\r\n  import('./pages/ResetPage'),\r\n);\r\n\r\nexport const AsyncHome = lazy(() =>\r\n  import('./pages/HomePage'),\r\n);\r\n\r\nexport const AsyncFavorite = lazy(() =>\r\n  import('./pages/FavoritePage'),\r\n);\r\n\r\nexport const AsyncCreate = lazy(() =>\r\n  import('./pages/CreateProductsPage'),\r\n);\r\n\r\nexport const AsyncEdit = lazy(() =>\r\n  import('./pages/EditProfilePage'),\r\n);\r\n\r\nexport const AsyncProduct = lazy(() =>\r\n  import('./pages/ProductPage'),\r\n);\r\n\r\nexport const AsyncProfile = lazy(() =>\r\n    import('./pages/ProfilePage'),\r\n);\r\n\r\nexport const AsyncInbox = lazy(() =>\r\n    import('./pages/InboxPage'),\r\n);\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst baseStyle = {\r\n  display : 'block',\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)'\r\n};\r\n\r\nexport const Loaders = () => {\r\n  return(\r\n    <div style={baseStyle}>\r\n      <Loader\r\n        type=\"Rings\"\r\n        color=\"#ccc\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, {Suspense} from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from \"../routes\";\nimport {Loaders} from \"./Loaders\";\nimport {useAuth} from \"../hooks/auth.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport css from './App.module.css'\n\nconst App = () => {\n    const {token, login, logout, id} = useAuth()\n    const isAuthenticated = !!token;\n    const routes = useRoutes()\n    return (\n        <div className={css.container}>\n            <AuthContext.Provider value={{\n                token, login, logout, id, isAuthenticated\n            }}>\n                <Suspense fallback={<Loaders/>}>\n                    <Router>\n                        {routes}\n                    </Router>\n                </Suspense>\n            </AuthContext.Provider>\n        </div>\n    )\n}\n\nexport default App","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [id, setId] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, userId) => {\r\n        setToken(jwtToken)\r\n        setId(userId)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            token:jwtToken, id:userId\r\n        }))\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n        if(data && data.token) {\r\n            login(data.token, data.id)\r\n        }\r\n    }, [login])\r\n\r\n    return {login, logout, token, id}\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {\r\n  AsyncRegister,\r\n  AsyncLogin,\r\n  AsyncReset,\r\n  AsyncHome,\r\n  AsyncFavorite,\r\n  AsyncCreate,\r\n  AsyncEdit,\r\n  AsyncProduct, AsyncProfile, AsyncInbox\r\n} from \"./async.routes\";\r\n\r\nexport const useRoutes = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n          <Route path=\"/register\" exact >\r\n          <AsyncRegister/>\r\n        </Route>\r\n        <Route path=\"/login\" exact>\r\n          <AsyncLogin/>\r\n        </Route>\r\n        <Route path=\"/reset\" exact>\r\n          <AsyncReset/>\r\n        </Route>\r\n        <Route path=\"/home\" exact>\r\n          <AsyncHome/>\r\n        </Route>\r\n        <Route path=\"/product/favorite\" exact>\r\n          <AsyncFavorite/>\r\n        </Route>\r\n        <Route path=\"/product/:id\">\r\n          <AsyncProduct/>\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <AsyncCreate/>\r\n        </Route>\r\n        <Route path=\"/profile/edit\" exact>\r\n          <AsyncEdit/>\r\n        </Route>\r\n        <Route path=\"/profile/:id\">\r\n          <AsyncProfile/>\r\n        </Route>\r\n        <Route path=\"/inbox\" exact>\r\n          <AsyncInbox/>\r\n        </Route>\r\n        <Redirect to=\"/home\"/>\r\n      </Switch>\r\n    </div>\r\n  )\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}