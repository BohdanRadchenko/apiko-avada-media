{"version":3,"sources":["components/RegisterForm/RegisterForm.js","pages/RegisterPage.js","components/RegisterForm/RegisterForm.module.css"],"names":["LoginForm","handlerAuthentication","defaultForm","email","name","password","passwordAgain","useState","form","setForm","showPassword","setShowPassword","showPasswordAgain","setShowPasswordAgain","request","useHttp","history","useHistory","auth","useContext","AuthContext","changeHandler","e","target","value","submitHandler","a","preventDefault","data","token","login","userId","push","HandlerShowPassword","className","css","container","wrapper","onSubmit","title","label","htmlFor","input","required","onChange","placeholder","id","type","passwordInner","autoComplete","onClick","submitBtn","regWrapper","textWrapper","to","registerLink","RegisterPage","LogHeader","RegisterForm","Footer","module","exports"],"mappings":"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","file":"static/js/14.170e731d.chunk.js","sourcesContent":["import React, {useContext, useState} from \"react\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport css from './RegisterForm.module.css'\r\n\r\nconst LoginForm = ({handlerAuthentication}) => {\r\n    const defaultForm = {email: '', name: '', password: '', passwordAgain: ''};\r\n    const [form, setForm] = useState(defaultForm);\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showPasswordAgain, setShowPasswordAgain] = useState(false)\r\n    const {request} = useHttp()\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            if(data.token) {\r\n                auth.login(data.token, data.userId)\r\n                history.push('/home')\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n        setShowPassword(false)\r\n        setShowPasswordAgain(false)\r\n        setForm(defaultForm);\r\n    };\r\n\r\n    const HandlerShowPassword = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.name === 'password') {\r\n            setShowPassword(!showPassword)\r\n        }\r\n        if (e.target.name === 'passwordAgain') {\r\n            setShowPasswordAgain(!showPasswordAgain)\r\n        }\r\n    }\r\n    return (\r\n        <div className={css.container}>\r\n            <div className={css.wrapper}>\r\n                <form className={css.form}\r\n                      onSubmit={e => submitHandler(e)}\r\n                >\r\n                    <h2 className={css.title}>Register</h2>\r\n\r\n                    {/*EMAIL*/}\r\n                    <label className={css.label} htmlFor=\"email\">Email</label>\r\n                    <input className={css.input}\r\n                           required\r\n                           value={form.email}\r\n                           name='email'\r\n                           onChange={e => changeHandler(e)}\r\n                           placeholder=\"Example@gmail.com\"\r\n                           id=\"email\"\r\n                           type=\"email\"/>\r\n\r\n                    {/*NAME*/}\r\n                    <label className={css.label} htmlFor=\"name\">Full name</label>\r\n                    <input className={css.input}\r\n                           required\r\n                           value={form.name}\r\n                           name='name'\r\n                           onChange={e => changeHandler(e)}\r\n                           placeholder=\"Tony Start\"\r\n                           id=\"name\"\r\n                           type=\"text\"/>\r\n\r\n                    {/*PASSWORD*/}\r\n                    <div className={css.passwordInner}>\r\n                        <label className={css.label} htmlFor=\"password\">Password</label>\r\n                        <input className={css.input}\r\n                               autoComplete=\"off\"\r\n                               required\r\n                               value={form.password}\r\n                               name='password'\r\n                               onChange={e => changeHandler(e)}\r\n                               id=\"password\"\r\n                               type={showPassword ? 'text' : 'password'}/>\r\n                        <button\r\n                            name='password'\r\n                            type='button'\r\n                            onClick={(e) => HandlerShowPassword(e)}\r\n                            className={css.showPassword}/>\r\n                    </div>\r\n\r\n                    {/*PASSWORD AGAIN*/}\r\n                    <div className={css.passwordInner}>\r\n                        <label className={css.label} htmlFor=\"passwordAgain\">Password again</label>\r\n                        <input className={css.input}\r\n                               autoComplete=\"off\"\r\n                               required\r\n                               value={form.passwordAgain}\r\n                               name='passwordAgain'\r\n                               onChange={e => changeHandler(e)}\r\n                               id=\"passwordAgain\"\r\n                               type={showPasswordAgain ? 'text' : 'password'}/>\r\n                        <button\r\n                            name='passwordAgain'\r\n                            type='button'\r\n                            onClick={(e) => HandlerShowPassword(e)}\r\n                            className={css.showPassword}/>\r\n                    </div>\r\n\r\n                    <button\r\n                        className={css.submitBtn}\r\n                        // onClick={e => submitHandler(e)}\r\n                    >\r\n                        Register\r\n                    </button>\r\n\r\n                </form>\r\n\r\n                <div className={css.regWrapper}>\r\n                    <div className={css.textWrapper}>\r\n                        <p>\r\n                            I already have an account,\r\n                        </p>\r\n                        <NavLink to='/login' className={css.registerLink}> LOG IN</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from \"react\";\r\nimport LogHeader from \"../components/LogHeader/LogHeader\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <div>\r\n            <LogHeader/>\r\n            <RegisterForm/>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RegisterForm_container__1fhO1\",\"wrapper\":\"RegisterForm_wrapper__1i2Kh\",\"form\":\"RegisterForm_form__2Hbb_\",\"title\":\"RegisterForm_title__RNeij\",\"passwordInner\":\"RegisterForm_passwordInner__2WlH6\",\"label\":\"RegisterForm_label__-wPg-\",\"input\":\"RegisterForm_input__1l07K\",\"showPassword\":\"RegisterForm_showPassword__3FK96\",\"resetPassword\":\"RegisterForm_resetPassword__2v9Ra\",\"submitBtn\":\"RegisterForm_submitBtn__3chWN\",\"regWrapper\":\"RegisterForm_regWrapper__1EZj7\",\"textWrapper\":\"RegisterForm_textWrapper__1IZ1H\",\"registerLink\":\"RegisterForm_registerLink__2LA0g\"};"],"sourceRoot":""}